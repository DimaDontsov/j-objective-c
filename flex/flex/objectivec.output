Nonterminals useless in grammar

   prog
   class_method_other_params_part
   method_call_name_args
   array_elems
   array_elems_or_empty
   array_constant


Terminals unused in grammar

   DOUBLE
   EXTERN
   ','
   '?'
   OR
   AND
   '|'
   '^'
   '&'
   '%'
   PREDEC
   PREINC
   POSTDEC
   POSTINC


Rules useless in grammar

   99 prog: extern_code
  100     | prog extern_code

  101 class_method_other_params_part: class_method_other_param
  102                               | class_method_other_param class_method_other_params_part

  103 method_call_name_args: method_call_name_arg
  104                      | method_call_name_args method_call_name_arg

  105 array_elems: expr
  106            | array_elems ',' expr

  107 array_elems_or_empty: array_elems
  108                     | /* empty */

  109 array_constant: '{' array_elems_or_empty '}'


Rules useless in parser due to conflicts

   54 class_invariants_declaration_part: class_invariants_declaration_part


State 35 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce


Grammar

    0 $accept: extern_code $end

    1 extern_code: func_declaration
    2            | func_implementation
    3            | class_declaration
    4            | class_implementation

    5 stmt_list: stmt_list stmt
    6          | stmt

    7 stmt_list_or_empty: stmt_list
    8                   | /* empty */

    9 stmt: RETURN expr ';'
   10     | RETURN ';'
   11     | init_stmt
   12     | expr ';'
   13     | if_stmt
   14     | while_stmt
   15     | compound_stmt

   16 compound_stmt: '{' stmt_list_or_empty '}'

   17 if_stmt: IF '(' expr ')' stmt
   18        | IF '(' expr ')' stmt ELSE stmt

   19 while_stmt: WHILE '(' expr ')' stmt

   20 init_stmt: ID assign_operator expr ';'
   21          | type_name '=' expr ';'

   22 assign_operator: '='
   23                | ADD_ASSIGN
   24                | SUB_ASSIGN
   25                | MUL_ASSIGN
   26                | DIV_ASSIGN

   27 type: ID
   28     | ID '*'

   29 type_name: type ID

   30 expr: expr '+' expr
   31     | expr '-' expr
   32     | expr '*' expr
   33     | expr '/' expr
   34     | expr '<' expr
   35     | expr LESS_OR_EQUAL expr
   36     | expr '>' expr
   37     | expr GREATER_OR_EQUAL expr
   38     | expr EQUAL expr
   39     | expr NOT_EQUAL expr
   40     | '!' expr
   41     | '+' expr
   42     | '-' expr
   43     | '(' expr ')'
   44     | INT
   45     | FLOAT
   46     | CHAR
   47     | STRING
   48     | ID
   49     | method_call
   50     | array_elem_call
   51     | invariant_call

   52 class_invariant_declaration: type_name ';'

   53 class_invariants_declaration_part: class_invariant_declaration
   54                                  | class_invariants_declaration_part

   55 class_invariants_declaration: '{' '}'
   56                             | '{' class_invariants_declaration_part '}'

   57 class_method_first_param: '(' type ')' ID

   58 class_method_other_param: ID ':' '(' type ')' ID
   59                         | class_method_first_param

   60 class_method_all_params: class_method_first_param
   61                        | class_method_first_param class_method_other_param

   62 class_method_params: class_method_all_params

   63 class_method: '-' '(' type ')' ID ':' class_method_params
   64             | '+' '(' type ')' ID ':' class_method_params
   65             | '-' '(' type ')' ID
   66             | '+' '(' type ')' ID

   67 class_method_declaration: class_method ';'

   68 class_methods_declaration: class_method_declaration
   69                          | class_methods_declaration class_method_declaration

   70 class_methods_declaration_or_empty: class_methods_declaration
   71                                   | /* empty */

   72 class_declaration: INTERFACE ID ':' ID class_invariants_declaration class_methods_declaration_or_empty END

   73 class_method_implementation: class_method compound_stmt

   74 class_methods_implementation: class_method_implementation
   75                             | class_methods_implementation class_method_implementation

   76 class_methods_implementation_or_empty: class_methods_implementation
   77                                      | /* empty */

   78 class_implementation: IMPLEMENTATION ID class_methods_implementation_or_empty END

   79 method_call_noname_arg: ':' expr

   80 method_call_name_arg: ID ':' expr

   81 method_call_noname_args: method_call_noname_arg
   82                        | method_call_noname_args method_call_noname_arg

   83 method_call_args: method_call_noname_args method_call_name_arg
   84                 | method_call_noname_args

   85 method_call_args_or_empty: method_call_args
   86                          | /* empty */

   87 method_name: ID

   88 method_call: '[' ID method_name method_call_args_or_empty ']'

   89 invariant_call: ID '.' ID

   90 array_elem_call: ID '[' expr ']'

   91 func_arg: type_name

   92 func_args: type_name
   93          | func_args func_arg

   94 func_args_or_empty: func_args
   95                   | /* empty */

   96 func_header: type_name '(' func_args_or_empty ')'

   97 func_declaration: func_header ';'

   98 func_implementation: func_header compound_stmt


Terminals, with rules where they appear

$end (0) 0
'!' (33) 40
'%' (37)
'&' (38)
'(' (40) 17 18 19 43 57 58 63 64 65 66 96
')' (41) 17 18 19 43 57 58 63 64 65 66 96
'*' (42) 28 32
'+' (43) 30 41 64 66
',' (44)
'-' (45) 31 42 63 65
'.' (46) 89
'/' (47) 33
':' (58) 58 63 64 72 79 80
';' (59) 9 10 12 20 21 52 67 97
'<' (60) 34
'=' (61) 21 22
'>' (62) 36
'?' (63)
'[' (91) 88 90
']' (93) 88 90
'^' (94)
'{' (123) 16 55 56
'|' (124)
'}' (125) 16 55 56
error (256)
INT (258) 44
FLOAT (259) 45
DOUBLE (260)
CHAR (261) 46
STRING (262) 47
ID (263) 20 27 28 29 48 57 58 63 64 65 66 72 78 80 87 88 89 90
WHILE (264) 19
IF (265) 17 18
ELSE (266) 18
END (267) 72 78
EXTERN (268)
IMPLEMENTATION (269) 78
INTERFACE (270) 72
RETURN (271) 9 10
ADD_ASSIGN (272) 23
DIV_ASSIGN (273) 26
GREATER_OR_EQUAL (274) 37
LESS_OR_EQUAL (275) 35
MUL_ASSIGN (276) 25
NOT_EQUAL (277) 39
SUB_ASSIGN (278) 24
OR (279)
AND (280)
EQUAL (281) 38
UPLUS (282)
UMINUS (283)
PREDEC (284)
PREINC (285)
POSTDEC (286)
POSTINC (287)
POINTER (288)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
extern_code (58)
    on left: 1 2 3 4, on right: 0
stmt_list (59)
    on left: 5 6, on right: 5 7
stmt_list_or_empty (60)
    on left: 7 8, on right: 16
stmt (61)
    on left: 9 10 11 12 13 14 15, on right: 5 6 17 18 19
compound_stmt (62)
    on left: 16, on right: 15 73 98
if_stmt (63)
    on left: 17 18, on right: 13
while_stmt (64)
    on left: 19, on right: 14
init_stmt (65)
    on left: 20 21, on right: 11
assign_operator (66)
    on left: 22 23 24 25 26, on right: 20
type (67)
    on left: 27 28, on right: 29 57 58 63 64 65 66
type_name (68)
    on left: 29, on right: 21 52 91 92 96
expr (69)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51, on right: 9 12 17 18 19 20 21 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 79 80 90
class_invariant_declaration (70)
    on left: 52, on right: 53
class_invariants_declaration_part (71)
    on left: 53 54, on right: 54 56
class_invariants_declaration (72)
    on left: 55 56, on right: 72
class_method_first_param (73)
    on left: 57, on right: 59 60 61
class_method_other_param (74)
    on left: 58 59, on right: 61
class_method_all_params (75)
    on left: 60 61, on right: 62
class_method_params (76)
    on left: 62, on right: 63 64
class_method (77)
    on left: 63 64 65 66, on right: 67 73
class_method_declaration (78)
    on left: 67, on right: 68 69
class_methods_declaration (79)
    on left: 68 69, on right: 69 70
class_methods_declaration_or_empty (80)
    on left: 70 71, on right: 72
class_declaration (81)
    on left: 72, on right: 3
class_method_implementation (82)
    on left: 73, on right: 74 75
class_methods_implementation (83)
    on left: 74 75, on right: 75 76
class_methods_implementation_or_empty (84)
    on left: 76 77, on right: 78
class_implementation (85)
    on left: 78, on right: 4
method_call_noname_arg (86)
    on left: 79, on right: 81 82
method_call_name_arg (87)
    on left: 80, on right: 83
method_call_noname_args (88)
    on left: 81 82, on right: 82 83 84
method_call_args (89)
    on left: 83 84, on right: 85
method_call_args_or_empty (90)
    on left: 85 86, on right: 88
method_name (91)
    on left: 87, on right: 88
method_call (92)
    on left: 88, on right: 49
invariant_call (93)
    on left: 89, on right: 51
array_elem_call (94)
    on left: 90, on right: 50
func_arg (95)
    on left: 91, on right: 93
func_args (96)
    on left: 92 93, on right: 93 94
func_args_or_empty (97)
    on left: 94 95, on right: 96
func_header (98)
    on left: 96, on right: 97 98
func_declaration (99)
    on left: 97, on right: 1
func_implementation (100)
    on left: 98, on right: 2


State 0

    0 $accept: . extern_code $end

    ID              shift, and go to state 1
    IMPLEMENTATION  shift, and go to state 2
    INTERFACE       shift, and go to state 3

    extern_code           go to state 4
    type                  go to state 5
    type_name             go to state 6
    class_declaration     go to state 7
    class_implementation  go to state 8
    func_header           go to state 9
    func_declaration      go to state 10
    func_implementation   go to state 11


State 1

   27 type: ID .
   28     | ID . '*'

    '*'  shift, and go to state 12

    $default  reduce using rule 27 (type)


State 2

   78 class_implementation: IMPLEMENTATION . ID class_methods_implementation_or_empty END

    ID  shift, and go to state 13


State 3

   72 class_declaration: INTERFACE . ID ':' ID class_invariants_declaration class_methods_declaration_or_empty END

    ID  shift, and go to state 14


State 4

    0 $accept: extern_code . $end

    $end  shift, and go to state 15


State 5

   29 type_name: type . ID

    ID  shift, and go to state 16


State 6

   96 func_header: type_name . '(' func_args_or_empty ')'

    '('  shift, and go to state 17


State 7

    3 extern_code: class_declaration .

    $default  reduce using rule 3 (extern_code)


State 8

    4 extern_code: class_implementation .

    $default  reduce using rule 4 (extern_code)


State 9

   97 func_declaration: func_header . ';'
   98 func_implementation: func_header . compound_stmt

    ';'  shift, and go to state 18
    '{'  shift, and go to state 19

    compound_stmt  go to state 20


State 10

    1 extern_code: func_declaration .

    $default  reduce using rule 1 (extern_code)


State 11

    2 extern_code: func_implementation .

    $default  reduce using rule 2 (extern_code)


State 12

   28 type: ID '*' .

    $default  reduce using rule 28 (type)


State 13

   78 class_implementation: IMPLEMENTATION ID . class_methods_implementation_or_empty END

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22

    $default  reduce using rule 77 (class_methods_implementation_or_empty)

    class_method                           go to state 23
    class_method_implementation            go to state 24
    class_methods_implementation           go to state 25
    class_methods_implementation_or_empty  go to state 26


State 14

   72 class_declaration: INTERFACE ID . ':' ID class_invariants_declaration class_methods_declaration_or_empty END

    ':'  shift, and go to state 27


State 15

    0 $accept: extern_code $end .

    $default  accept


State 16

   29 type_name: type ID .

    $default  reduce using rule 29 (type_name)


State 17

   96 func_header: type_name '(' . func_args_or_empty ')'

    ID  shift, and go to state 1

    $default  reduce using rule 95 (func_args_or_empty)

    type                go to state 5
    type_name           go to state 28
    func_args           go to state 29
    func_args_or_empty  go to state 30


State 18

   97 func_declaration: func_header ';' .

    $default  reduce using rule 97 (func_declaration)


State 19

   16 compound_stmt: '{' . stmt_list_or_empty '}'

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 35
    WHILE   shift, and go to state 36
    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '{'     shift, and go to state 19
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    $default  reduce using rule 8 (stmt_list_or_empty)

    stmt_list           go to state 44
    stmt_list_or_empty  go to state 45
    stmt                go to state 46
    compound_stmt       go to state 47
    if_stmt             go to state 48
    while_stmt          go to state 49
    init_stmt           go to state 50
    type                go to state 5
    type_name           go to state 51
    expr                go to state 52
    method_call         go to state 53
    invariant_call      go to state 54
    array_elem_call     go to state 55


State 20

   98 func_implementation: func_header compound_stmt .

    $default  reduce using rule 98 (func_implementation)


State 21

   63 class_method: '-' . '(' type ')' ID ':' class_method_params
   65             | '-' . '(' type ')' ID

    '('  shift, and go to state 56


State 22

   64 class_method: '+' . '(' type ')' ID ':' class_method_params
   66             | '+' . '(' type ')' ID

    '('  shift, and go to state 57


State 23

   73 class_method_implementation: class_method . compound_stmt

    '{'  shift, and go to state 19

    compound_stmt  go to state 58


State 24

   74 class_methods_implementation: class_method_implementation .

    $default  reduce using rule 74 (class_methods_implementation)


State 25

   75 class_methods_implementation: class_methods_implementation . class_method_implementation
   76 class_methods_implementation_or_empty: class_methods_implementation .

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22

    $default  reduce using rule 76 (class_methods_implementation_or_empty)

    class_method                 go to state 23
    class_method_implementation  go to state 59


State 26

   78 class_implementation: IMPLEMENTATION ID class_methods_implementation_or_empty . END

    END  shift, and go to state 60


State 27

   72 class_declaration: INTERFACE ID ':' . ID class_invariants_declaration class_methods_declaration_or_empty END

    ID  shift, and go to state 61


State 28

   92 func_args: type_name .

    $default  reduce using rule 92 (func_args)


State 29

   93 func_args: func_args . func_arg
   94 func_args_or_empty: func_args .

    ID  shift, and go to state 1

    $default  reduce using rule 94 (func_args_or_empty)

    type       go to state 5
    type_name  go to state 62
    func_arg   go to state 63


State 30

   96 func_header: type_name '(' func_args_or_empty . ')'

    ')'  shift, and go to state 64


State 31

   44 expr: INT .

    $default  reduce using rule 44 (expr)


State 32

   45 expr: FLOAT .

    $default  reduce using rule 45 (expr)


State 33

   46 expr: CHAR .

    $default  reduce using rule 46 (expr)


State 34

   47 expr: STRING .

    $default  reduce using rule 47 (expr)


State 35

   20 init_stmt: ID . assign_operator expr ';'
   27 type: ID .
   28     | ID . '*'
   48 expr: ID .
   89 invariant_call: ID . '.' ID
   90 array_elem_call: ID . '[' expr ']'

    ADD_ASSIGN  shift, and go to state 65
    DIV_ASSIGN  shift, and go to state 66
    MUL_ASSIGN  shift, and go to state 67
    SUB_ASSIGN  shift, and go to state 68
    '='         shift, and go to state 69
    '*'         shift, and go to state 12
    '['         shift, and go to state 70
    '.'         shift, and go to state 71

    ID        reduce using rule 27 (type)
    '*'       [reduce using rule 48 (expr)]
    $default  reduce using rule 48 (expr)

    assign_operator  go to state 72


State 36

   19 while_stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 73


State 37

   17 if_stmt: IF . '(' expr ')' stmt
   18        | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 74


State 38

    9 stmt: RETURN . expr ';'
   10     | RETURN . ';'

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    ';'     shift, and go to state 76
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 77
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 39

   42 expr: '-' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 78
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 40

   41 expr: '+' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 79
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 41

   40 expr: '!' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 80
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 42

   43 expr: '(' . expr ')'

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 81
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 43

   88 method_call: '[' . ID method_name method_call_args_or_empty ']'

    ID  shift, and go to state 82


State 44

    5 stmt_list: stmt_list . stmt
    7 stmt_list_or_empty: stmt_list .

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 35
    WHILE   shift, and go to state 36
    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '{'     shift, and go to state 19
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    $default  reduce using rule 7 (stmt_list_or_empty)

    stmt             go to state 83
    compound_stmt    go to state 47
    if_stmt          go to state 48
    while_stmt       go to state 49
    init_stmt        go to state 50
    type             go to state 5
    type_name        go to state 51
    expr             go to state 52
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 45

   16 compound_stmt: '{' stmt_list_or_empty . '}'

    '}'  shift, and go to state 84


State 46

    6 stmt_list: stmt .

    $default  reduce using rule 6 (stmt_list)


State 47

   15 stmt: compound_stmt .

    $default  reduce using rule 15 (stmt)


State 48

   13 stmt: if_stmt .

    $default  reduce using rule 13 (stmt)


State 49

   14 stmt: while_stmt .

    $default  reduce using rule 14 (stmt)


State 50

   11 stmt: init_stmt .

    $default  reduce using rule 11 (stmt)


State 51

   21 init_stmt: type_name . '=' expr ';'

    '='  shift, and go to state 85


State 52

   12 stmt: expr . ';'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95
    ';'               shift, and go to state 96


State 53

   49 expr: method_call .

    $default  reduce using rule 49 (expr)


State 54

   51 expr: invariant_call .

    $default  reduce using rule 51 (expr)


State 55

   50 expr: array_elem_call .

    $default  reduce using rule 50 (expr)


State 56

   63 class_method: '-' '(' . type ')' ID ':' class_method_params
   65             | '-' '(' . type ')' ID

    ID  shift, and go to state 1

    type  go to state 97


State 57

   64 class_method: '+' '(' . type ')' ID ':' class_method_params
   66             | '+' '(' . type ')' ID

    ID  shift, and go to state 1

    type  go to state 98


State 58

   73 class_method_implementation: class_method compound_stmt .

    $default  reduce using rule 73 (class_method_implementation)


State 59

   75 class_methods_implementation: class_methods_implementation class_method_implementation .

    $default  reduce using rule 75 (class_methods_implementation)


State 60

   78 class_implementation: IMPLEMENTATION ID class_methods_implementation_or_empty END .

    $default  reduce using rule 78 (class_implementation)


State 61

   72 class_declaration: INTERFACE ID ':' ID . class_invariants_declaration class_methods_declaration_or_empty END

    '{'  shift, and go to state 99

    class_invariants_declaration  go to state 100


State 62

   91 func_arg: type_name .

    $default  reduce using rule 91 (func_arg)


State 63

   93 func_args: func_args func_arg .

    $default  reduce using rule 93 (func_args)


State 64

   96 func_header: type_name '(' func_args_or_empty ')' .

    $default  reduce using rule 96 (func_header)


State 65

   23 assign_operator: ADD_ASSIGN .

    $default  reduce using rule 23 (assign_operator)


State 66

   26 assign_operator: DIV_ASSIGN .

    $default  reduce using rule 26 (assign_operator)


State 67

   25 assign_operator: MUL_ASSIGN .

    $default  reduce using rule 25 (assign_operator)


State 68

   24 assign_operator: SUB_ASSIGN .

    $default  reduce using rule 24 (assign_operator)


State 69

   22 assign_operator: '=' .

    $default  reduce using rule 22 (assign_operator)


State 70

   90 array_elem_call: ID '[' . expr ']'

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 101
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 71

   89 invariant_call: ID '.' . ID

    ID  shift, and go to state 102


State 72

   20 init_stmt: ID assign_operator . expr ';'

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 103
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 73

   19 while_stmt: WHILE '(' . expr ')' stmt

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 104
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 74

   17 if_stmt: IF '(' . expr ')' stmt
   18        | IF '(' . expr ')' stmt ELSE stmt

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 105
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 75

   48 expr: ID .
   89 invariant_call: ID . '.' ID
   90 array_elem_call: ID . '[' expr ']'

    '['  shift, and go to state 70
    '.'  shift, and go to state 71

    $default  reduce using rule 48 (expr)


State 76

   10 stmt: RETURN ';' .

    $default  reduce using rule 10 (stmt)


State 77

    9 stmt: RETURN expr . ';'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95
    ';'               shift, and go to state 106


State 78

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr
   42     | '-' expr .

    $default  reduce using rule 42 (expr)


State 79

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr
   41     | '+' expr .

    $default  reduce using rule 41 (expr)


State 80

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr
   40     | '!' expr .

    $default  reduce using rule 40 (expr)


State 81

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr
   43     | '(' expr . ')'

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95
    ')'               shift, and go to state 107


State 82

   88 method_call: '[' ID . method_name method_call_args_or_empty ']'

    ID  shift, and go to state 108

    method_name  go to state 109


State 83

    5 stmt_list: stmt_list stmt .

    $default  reduce using rule 5 (stmt_list)


State 84

   16 compound_stmt: '{' stmt_list_or_empty '}' .

    $default  reduce using rule 16 (compound_stmt)


State 85

   21 init_stmt: type_name '=' . expr ';'

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 110
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 86

   37 expr: expr GREATER_OR_EQUAL . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 111
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 87

   35 expr: expr LESS_OR_EQUAL . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 112
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 88

   39 expr: expr NOT_EQUAL . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 113
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 89

   38 expr: expr EQUAL . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 114
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 90

   34 expr: expr '<' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 115
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 91

   36 expr: expr '>' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 116
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 92

   31 expr: expr '-' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 117
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 93

   30 expr: expr '+' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 118
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 94

   32 expr: expr '*' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 119
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 95

   33 expr: expr '/' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 120
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 96

   12 stmt: expr ';' .

    $default  reduce using rule 12 (stmt)


State 97

   63 class_method: '-' '(' type . ')' ID ':' class_method_params
   65             | '-' '(' type . ')' ID

    ')'  shift, and go to state 121


State 98

   64 class_method: '+' '(' type . ')' ID ':' class_method_params
   66             | '+' '(' type . ')' ID

    ')'  shift, and go to state 122


State 99

   55 class_invariants_declaration: '{' . '}'
   56                             | '{' . class_invariants_declaration_part '}'

    ID   shift, and go to state 1
    '}'  shift, and go to state 123

    type                               go to state 5
    type_name                          go to state 124
    class_invariant_declaration        go to state 125
    class_invariants_declaration_part  go to state 126


State 100

   72 class_declaration: INTERFACE ID ':' ID class_invariants_declaration . class_methods_declaration_or_empty END

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22

    $default  reduce using rule 71 (class_methods_declaration_or_empty)

    class_method                        go to state 127
    class_method_declaration            go to state 128
    class_methods_declaration           go to state 129
    class_methods_declaration_or_empty  go to state 130


State 101

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr
   90 array_elem_call: ID '[' expr . ']'

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95
    ']'               shift, and go to state 131


State 102

   89 invariant_call: ID '.' ID .

    $default  reduce using rule 89 (invariant_call)


State 103

   20 init_stmt: ID assign_operator expr . ';'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95
    ';'               shift, and go to state 132


State 104

   19 while_stmt: WHILE '(' expr . ')' stmt
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95
    ')'               shift, and go to state 133


State 105

   17 if_stmt: IF '(' expr . ')' stmt
   18        | IF '(' expr . ')' stmt ELSE stmt
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95
    ')'               shift, and go to state 134


State 106

    9 stmt: RETURN expr ';' .

    $default  reduce using rule 9 (stmt)


State 107

   43 expr: '(' expr ')' .

    $default  reduce using rule 43 (expr)


State 108

   87 method_name: ID .

    $default  reduce using rule 87 (method_name)


State 109

   88 method_call: '[' ID method_name . method_call_args_or_empty ']'

    ':'  shift, and go to state 135

    $default  reduce using rule 86 (method_call_args_or_empty)

    method_call_noname_arg     go to state 136
    method_call_noname_args    go to state 137
    method_call_args           go to state 138
    method_call_args_or_empty  go to state 139


State 110

   21 init_stmt: type_name '=' expr . ';'
   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95
    ';'               shift, and go to state 140


State 111

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   37     | expr GREATER_OR_EQUAL expr .
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 37 (expr)


State 112

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   35     | expr LESS_OR_EQUAL expr .
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 35 (expr)


State 113

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr
   39     | expr NOT_EQUAL expr .

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95

    $default  reduce using rule 39 (expr)


State 114

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   38     | expr EQUAL expr .
   39     | expr . NOT_EQUAL expr

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95

    $default  reduce using rule 38 (expr)


State 115

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   34     | expr '<' expr .
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 34 (expr)


State 116

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   36     | expr '>' expr .
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 36 (expr)


State 117

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   31     | expr '-' expr .
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 31 (expr)


State 118

   30 expr: expr . '+' expr
   30     | expr '+' expr .
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 30 (expr)


State 119

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   32     | expr '*' expr .
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    $default  reduce using rule 32 (expr)


State 120

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   33     | expr '/' expr .
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr

    $default  reduce using rule 33 (expr)


State 121

   63 class_method: '-' '(' type ')' . ID ':' class_method_params
   65             | '-' '(' type ')' . ID

    ID  shift, and go to state 141


State 122

   64 class_method: '+' '(' type ')' . ID ':' class_method_params
   66             | '+' '(' type ')' . ID

    ID  shift, and go to state 142


State 123

   55 class_invariants_declaration: '{' '}' .

    $default  reduce using rule 55 (class_invariants_declaration)


State 124

   52 class_invariant_declaration: type_name . ';'

    ';'  shift, and go to state 143


State 125

   53 class_invariants_declaration_part: class_invariant_declaration .

    $default  reduce using rule 53 (class_invariants_declaration_part)


State 126

   54 class_invariants_declaration_part: class_invariants_declaration_part .
   56 class_invariants_declaration: '{' class_invariants_declaration_part . '}'

    '}'  shift, and go to state 144

    '}'  [reduce using rule 54 (class_invariants_declaration_part)]


State 127

   67 class_method_declaration: class_method . ';'

    ';'  shift, and go to state 145


State 128

   68 class_methods_declaration: class_method_declaration .

    $default  reduce using rule 68 (class_methods_declaration)


State 129

   69 class_methods_declaration: class_methods_declaration . class_method_declaration
   70 class_methods_declaration_or_empty: class_methods_declaration .

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22

    $default  reduce using rule 70 (class_methods_declaration_or_empty)

    class_method              go to state 127
    class_method_declaration  go to state 146


State 130

   72 class_declaration: INTERFACE ID ':' ID class_invariants_declaration class_methods_declaration_or_empty . END

    END  shift, and go to state 147


State 131

   90 array_elem_call: ID '[' expr ']' .

    $default  reduce using rule 90 (array_elem_call)


State 132

   20 init_stmt: ID assign_operator expr ';' .

    $default  reduce using rule 20 (init_stmt)


State 133

   19 while_stmt: WHILE '(' expr ')' . stmt

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 35
    WHILE   shift, and go to state 36
    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '{'     shift, and go to state 19
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    stmt             go to state 148
    compound_stmt    go to state 47
    if_stmt          go to state 48
    while_stmt       go to state 49
    init_stmt        go to state 50
    type             go to state 5
    type_name        go to state 51
    expr             go to state 52
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 134

   17 if_stmt: IF '(' expr ')' . stmt
   18        | IF '(' expr ')' . stmt ELSE stmt

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 35
    WHILE   shift, and go to state 36
    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '{'     shift, and go to state 19
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    stmt             go to state 149
    compound_stmt    go to state 47
    if_stmt          go to state 48
    while_stmt       go to state 49
    init_stmt        go to state 50
    type             go to state 5
    type_name        go to state 51
    expr             go to state 52
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 135

   79 method_call_noname_arg: ':' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 150
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 136

   81 method_call_noname_args: method_call_noname_arg .

    $default  reduce using rule 81 (method_call_noname_args)


State 137

   82 method_call_noname_args: method_call_noname_args . method_call_noname_arg
   83 method_call_args: method_call_noname_args . method_call_name_arg
   84                 | method_call_noname_args .

    ID   shift, and go to state 151
    ':'  shift, and go to state 135

    $default  reduce using rule 84 (method_call_args)

    method_call_noname_arg  go to state 152
    method_call_name_arg    go to state 153


State 138

   85 method_call_args_or_empty: method_call_args .

    $default  reduce using rule 85 (method_call_args_or_empty)


State 139

   88 method_call: '[' ID method_name method_call_args_or_empty . ']'

    ']'  shift, and go to state 154


State 140

   21 init_stmt: type_name '=' expr ';' .

    $default  reduce using rule 21 (init_stmt)


State 141

   63 class_method: '-' '(' type ')' ID . ':' class_method_params
   65             | '-' '(' type ')' ID .

    ':'  shift, and go to state 155

    $default  reduce using rule 65 (class_method)


State 142

   64 class_method: '+' '(' type ')' ID . ':' class_method_params
   66             | '+' '(' type ')' ID .

    ':'  shift, and go to state 156

    $default  reduce using rule 66 (class_method)


State 143

   52 class_invariant_declaration: type_name ';' .

    $default  reduce using rule 52 (class_invariant_declaration)


State 144

   56 class_invariants_declaration: '{' class_invariants_declaration_part '}' .

    $default  reduce using rule 56 (class_invariants_declaration)


State 145

   67 class_method_declaration: class_method ';' .

    $default  reduce using rule 67 (class_method_declaration)


State 146

   69 class_methods_declaration: class_methods_declaration class_method_declaration .

    $default  reduce using rule 69 (class_methods_declaration)


State 147

   72 class_declaration: INTERFACE ID ':' ID class_invariants_declaration class_methods_declaration_or_empty END .

    $default  reduce using rule 72 (class_declaration)


State 148

   19 while_stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 19 (while_stmt)


State 149

   17 if_stmt: IF '(' expr ')' stmt .
   18        | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 157

    ELSE      [reduce using rule 17 (if_stmt)]
    $default  reduce using rule 17 (if_stmt)


State 150

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr
   79 method_call_noname_arg: ':' expr .

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95

    $default  reduce using rule 79 (method_call_noname_arg)


State 151

   80 method_call_name_arg: ID . ':' expr

    ':'  shift, and go to state 158


State 152

   82 method_call_noname_args: method_call_noname_args method_call_noname_arg .

    $default  reduce using rule 82 (method_call_noname_args)


State 153

   83 method_call_args: method_call_noname_args method_call_name_arg .

    $default  reduce using rule 83 (method_call_args)


State 154

   88 method_call: '[' ID method_name method_call_args_or_empty ']' .

    $default  reduce using rule 88 (method_call)


State 155

   63 class_method: '-' '(' type ')' ID ':' . class_method_params

    '('  shift, and go to state 159

    class_method_first_param  go to state 160
    class_method_all_params   go to state 161
    class_method_params       go to state 162


State 156

   64 class_method: '+' '(' type ')' ID ':' . class_method_params

    '('  shift, and go to state 159

    class_method_first_param  go to state 160
    class_method_all_params   go to state 161
    class_method_params       go to state 163


State 157

   18 if_stmt: IF '(' expr ')' stmt ELSE . stmt

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 35
    WHILE   shift, and go to state 36
    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '{'     shift, and go to state 19
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    stmt             go to state 164
    compound_stmt    go to state 47
    if_stmt          go to state 48
    while_stmt       go to state 49
    init_stmt        go to state 50
    type             go to state 5
    type_name        go to state 51
    expr             go to state 52
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 158

   80 method_call_name_arg: ID ':' . expr

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    CHAR    shift, and go to state 33
    STRING  shift, and go to state 34
    ID      shift, and go to state 75
    '-'     shift, and go to state 39
    '+'     shift, and go to state 40
    '!'     shift, and go to state 41
    '('     shift, and go to state 42
    '['     shift, and go to state 43

    expr             go to state 165
    method_call      go to state 53
    invariant_call   go to state 54
    array_elem_call  go to state 55


State 159

   57 class_method_first_param: '(' . type ')' ID

    ID  shift, and go to state 1

    type  go to state 166


State 160

   60 class_method_all_params: class_method_first_param .
   61                        | class_method_first_param . class_method_other_param

    ID   shift, and go to state 167
    '('  shift, and go to state 159

    $default  reduce using rule 60 (class_method_all_params)

    class_method_first_param  go to state 168
    class_method_other_param  go to state 169


State 161

   62 class_method_params: class_method_all_params .

    $default  reduce using rule 62 (class_method_params)


State 162

   63 class_method: '-' '(' type ')' ID ':' class_method_params .

    $default  reduce using rule 63 (class_method)


State 163

   64 class_method: '+' '(' type ')' ID ':' class_method_params .

    $default  reduce using rule 64 (class_method)


State 164

   18 if_stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 18 (if_stmt)


State 165

   30 expr: expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | expr . '<' expr
   35     | expr . LESS_OR_EQUAL expr
   36     | expr . '>' expr
   37     | expr . GREATER_OR_EQUAL expr
   38     | expr . EQUAL expr
   39     | expr . NOT_EQUAL expr
   80 method_call_name_arg: ID ':' expr .

    GREATER_OR_EQUAL  shift, and go to state 86
    LESS_OR_EQUAL     shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    EQUAL             shift, and go to state 89
    '<'               shift, and go to state 90
    '>'               shift, and go to state 91
    '-'               shift, and go to state 92
    '+'               shift, and go to state 93
    '*'               shift, and go to state 94
    '/'               shift, and go to state 95

    $default  reduce using rule 80 (method_call_name_arg)


State 166

   57 class_method_first_param: '(' type . ')' ID

    ')'  shift, and go to state 170


State 167

   58 class_method_other_param: ID . ':' '(' type ')' ID

    ':'  shift, and go to state 171


State 168

   59 class_method_other_param: class_method_first_param .

    $default  reduce using rule 59 (class_method_other_param)


State 169

   61 class_method_all_params: class_method_first_param class_method_other_param .

    $default  reduce using rule 61 (class_method_all_params)


State 170

   57 class_method_first_param: '(' type ')' . ID

    ID  shift, and go to state 172


State 171

   58 class_method_other_param: ID ':' . '(' type ')' ID

    '('  shift, and go to state 173


State 172

   57 class_method_first_param: '(' type ')' ID .

    $default  reduce using rule 57 (class_method_first_param)


State 173

   58 class_method_other_param: ID ':' '(' . type ')' ID

    ID  shift, and go to state 1

    type  go to state 174


State 174

   58 class_method_other_param: ID ':' '(' type . ')' ID

    ')'  shift, and go to state 175


State 175

   58 class_method_other_param: ID ':' '(' type ')' . ID

    ID  shift, and go to state 176


State 176

   58 class_method_other_param: ID ':' '(' type ')' ID .

    $default  reduce using rule 58 (class_method_other_param)
